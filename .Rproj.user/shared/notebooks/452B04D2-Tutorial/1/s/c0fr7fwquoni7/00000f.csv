"0","library(testthat)"
"0","#----------------------------------------Test result when we have intercept--------------------"
"0","test_that(""yblm returns correct coefficient"", {"
"0","  tolerance = 1e-12"
"0","  expect_equal(as.numeric(fityb1$coef), unname(fit1$coefficients),tolerance = tolerance)"
"0","})"
"1","Test passed "
"1",""
"1","
"
"0","test_that(""yblm returns correct predicted value"", {"
"0","  tolerance = 1e-12"
"0","  expect_equal(as.numeric(fityb1$predict), unname(fit1$fitted.values),tolerance = tolerance)"
"0","})"
"1","Test passed "
"1",""
"1","
"
"0","test_that(""yblm returns correct residual value"", {"
"0","  tolerance = 1e-12"
"0","  expect_equal(as.numeric(fityb1$residual), unname(fit1$residuals),tolerance = tolerance)"
"0","})"
"1","Test passed "
"1",""
"1","
"
"0","test_that(""yblm returns correct residual degree of freedom"", {"
"0","  tolerance = 1e-12"
"0","  expect_equal(as.numeric(fityb1$R_df), unname(fit1$df.residual),tolerance = tolerance)"
"0","})"
"1","Test passed "
"1",""
"1","
"
"0","test_that(""yblm returns correct degree of freedom between groups"", {"
"0","  tolerance = 1e-12"
"0","  expect_equal(as.numeric(fityb1$M_df), unname(sum(anova(fit1)[1]) - fit1$df.residual),tolerance = tolerance)"
"0","})"
"1","Test passed "
"1",""
"1","
"
"0","test_that(""yblm returns correct R_square"", {"
"0","  tolerance = 1e-12"
"0","  expect_equal(as.numeric(fityb1$R_square),as.numeric(summary(fit1)[8]) ,tolerance = tolerance)"
"0","})"
"1","Test passed "
"1",""
"1","
"
"0","test_that(""yblm returns correct Adj_R_square"", {"
"0","  tolerance = 1e-12"
"0","  expect_equal(as.numeric(fityb1$Adj_R_square), as.numeric(summary(fit1)[9]),tolerance = tolerance)"
"0","})"
"1","Test passed "
"1",""
"1","
"
"0","test_that(""yblm returns correct F_statistic"", {"
"0","  tolerance = 1e-12"
"0","  expect_equal(as.numeric(fityb1$F_statistic), unname(summary(fit1)$fstatistic[""value""]),tolerance = tolerance)"
"0","})"
"1","Test passed "
"1",""
"1","
"
"0","test_that(""yblm returns correct F_statistic p value"", {"
"0","  tolerance = 1e-5"
"0","  F_p_value <- pf(summary(fit1)$fstatistic[1], summary(fit1)$fstatistic[2], summary(fit1)$fstatistic[3], lower.tail = FALSE)"
"0","  expect_equal(as.numeric(fityb1$p_value_F), unname(F_p_value),tolerance = tolerance)"
"0","})"
"1","Test passed "
"1",""
"1","
"
"0","test_that(""yblm returns correct coefficient matrix"", {"
"0","  tolerance = 1e-12"
"0","  expect_equal(unname(fityb1$coef_matrix), unname(summary(fit1)$coefficients),tolerance = tolerance)"
"0","})"
"1","Test passed "
"1",""
"1","
"
