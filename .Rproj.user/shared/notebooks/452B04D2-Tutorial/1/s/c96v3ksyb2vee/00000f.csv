"0","#----------------------------------------Test result when we have no intercept--------------------"
"0","test_that(""yblm returns correct coefficient"", {"
"0","  tolerance = 1e-12"
"0","  expect_equal(as.numeric(fityb2$coef), unname(fit2$coefficients),tolerance = tolerance)"
"0","})"
"1","Test passed "
"1",""
"1","
"
"0","test_that(""yblm returns correct predicted value"", {"
"0","  tolerance = 1e-12"
"0","  expect_equal(as.numeric(fityb2$predict), unname(fit2$fitted.values),tolerance = tolerance)"
"0","})"
"1","Test passed "
"1",""
"1","
"
"0","test_that(""yblm returns correct residual value"", {"
"0","  tolerance = 1e-12"
"0","  expect_equal(as.numeric(fityb2$residual), unname(fit2$residuals),tolerance = tolerance)"
"0","})"
"1","Test passed "
"1",""
"1","
"
"0","test_that(""yblm returns correct residual degree of freedom"", {"
"0","  tolerance = 1e-12"
"0","  expect_equal(as.numeric(fityb2$R_df), unname(fit2$df.residual),tolerance = tolerance)"
"0","})"
"1","Test passed "
"1",""
"1","
"
"0","test_that(""yblm returns correct degree of freedom between groups"", {"
"0","  tolerance = 1e-12"
"0","  expect_equal(as.numeric(fityb2$M_df), unname(sum(anova(fit2)[1]) - fit2$df.residual),tolerance = tolerance)"
"0","})"
"1","Test passed "
"1",""
"1","
"
"0","test_that(""yblm returns correct R_square"", {"
"0","  tolerance = 1e-12"
"0","  expect_equal(as.numeric(fityb2$R_square),as.numeric(summary(fit2)[8]) ,tolerance = tolerance)"
"0","})"
"1","Test passed "
"1",""
"1","
"
"0","test_that(""yblm returns correct Adj_R_square"", {"
"0","  tolerance = 1e-12"
"0","  expect_equal(as.numeric(fityb2$Adj_R_square), as.numeric(summary(fit2)[9]),tolerance = tolerance)"
"0","})"
"1","Test passed "
"1",""
"1","
"
"0","test_that(""yblm returns correct F_statistic"", {"
"0","  tolerance = 1e-12"
"0","  expect_equal(as.numeric(fityb2$F_statistic), unname(summary(fit2)$fstatistic[""value""]),tolerance = tolerance)"
"0","})"
"1","Test passed "
"1",""
"1","
"
"0","test_that(""yblm returns correct F_statistic p value"", {"
"0","  tolerance = 1e-12"
"0","  F_p_value <- pf(summary(fit2)$fstatistic[1], summary(fit2)$fstatistic[2], summary(fit2)$fstatistic[3], lower.tail = FALSE)"
"0","  expect_equal(as.numeric(fityb2$p_value_F), unname(F_p_value),tolerance = tolerance)"
"0","})"
"1","Test passed "
"1",""
"1","
"
"0","test_that(""yblm returns correct coefficient matrix"", {"
"0","  tolerance = 1e-12"
"0","  expect_equal(unname(fityb2$coef_matrix), unname(summary(fit2)$coefficients),tolerance = tolerance)"
"0","})"
"1","Test passed "
"1",""
"1","
"
